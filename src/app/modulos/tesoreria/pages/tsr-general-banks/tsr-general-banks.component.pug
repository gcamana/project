.theme-treasury
    cs-shrinking-header-component([headerHeight]="mobileQuery.matches ? 192 : 256", [offset]="mobileQuery.matches ? 45: 64")
        .wrapper
            span.font-size-56( (click)="backPage()") Cajas
.wrapper.theme-treasury.margin-minus-top
    //-.cs-button-fabs
        button.cs-button-fab(mat-fab)
            mat-icon(aria-label="filter list icon") add
        //- button.cs-button-mini-fab(mat-mini-fab)
        //-     mat-icon(aria-label="filter list icon") info_outline
    cs-acordion-global-group(*ngFor="let data_bank_sede of data_bank_general; let i = index")
        cs-acordion-global((toggleAccordion)="hideButton($event)")
            mat-toolbar(class="transparent mat-toolbar mat-toolbar-multiple-rows")
                mat-toolbar-row(class="mat-toolbar-row")
                    span {{data_bank_sede.metadata.desc_sede}}
                    span.cs-spacer
                    .button-row.display_none(id="ocultar")
                        button(mat-icon-button, (click)="openModalbanks()")
                            mat-icon fullscreen
                        button(mat-icon-button,[matMenuTriggerFor]='menuDownload')
                                mat-icon more_vert
                        mat-menu(#menuDownload='matMenu', yPosition="below", xPosition="before")
                                button(mat-menu-item, (click)="generarExcel()") Descargar.PDF
                                button(mat-menu-item, (click)="generarExcel()") Descargass.XLS
                                button(mat-menu-item, (click)="generarExcel()") Incidencias
                                button(mat-menu-item, (click)="generarExcel()") Devoluciones
            .cs-row-column-no-direction
                .col-3.min_width
                    .calendar-container.columns-accor
                        mat-toolbar.transparent
                            mat-toolbar-row.cs-mat-toolbar-row([class.no-padding-left]="isFilterMode")
                                div(*ngIf="!isFilterMode", mwlCalendarToday)
                                    span.cs-calendar-today {{ viewDate |  calendarDate:(view + 'ViewTitle'):'es' | csCapitalize}}
                                button(*ngIf="!isFilterMode", mat-icon-button, mwlCalendarPreviousView, [view]="view", [(viewDate)]="viewDate", (viewDateChange)="activeDayIsOpen = false")
                                    mat-icon keyboard_arrow_left
                                button(*ngIf="!isFilterMode", mat-icon-button, mwlCalendarNextView, [view]="view", [(viewDate)]="viewDate", (viewDateChange)="activeDayIsOpen = false")
                                    mat-icon keyboard_arrow_right
                                span.cs-spacer(*ngIf="!isFilterMode")
                                button(mat-icon-button, (click)="toggleFilter()")
                                    mat-icon filter_list
                                .cs-filter-text(*ngIf="isFilterMode") Filtrar
                                span.cs-spacer(*ngIf="isFilterMode")

                        mwl-calendar-month-view(
                            *ngIf="!isFilterMode",
                            [viewDate]='viewDate',
                            [locale]="locale",
                            [events]='events',
                            [weekStartsOn]="weekStartsOn",
                            [weekendDays]="weekendDays",
                            (dayClicked)='dayClicked($event.day)',
                            (eventClicked)="handleEvent('Clicked', $event.event)",
                            [refresh]="refresh",
                            (beforeViewRender)="beforeMonthViewRender($event)")

                    .cs-filter-content(*ngIf="isFilterMode")
                        form([formGroup]="newDateForm")
                            div.cs-flex
                                button(mat-icon-button, color="accent", (click)="startDate.open()")
                                    mat-icon date_range
                                mat-form-field.full-width
                                    input(matInput, #focusStart, [matDatepicker]="startDate", placeholder="Fecha de inicio", formControlName="startDate")
                                    mat-datepicker(#startDate, panelClass="tsr-datapicker")

                            div.cs-flex
                                button(mat-icon-button, color="accent", (click)="stopDate.open()")
                                    mat-icon date_range
                                mat-form-field.full-width
                                    input(matInput, #focusStop, [matDatepicker]="stopDate", placeholder="Fecha fin", formControlName="stopDate")
                                    mat-datepicker(#stopDate, panelClass="tsr-datapicker")

                        .button-row
                            button(mat-button, color="accent", (click)="toggleFilter()") {{ 'cancelar' | uppercase }}
                            button(mat-button, color="accent", [disabled]="!newDateForm.valid", (click)="filterDate()") {{ 'aceptar' | uppercase }}
                .col-3.min_width
                    .calendar-container.columns-accor
                        mat-list
                            mat-list-item
                                img(matListAvatar , [src]="data_bank_sede.metadata.foto || UNKNOWN_USER_IMAGE", alt="")
                                h3(matLine) {{ data_bank_sede.metadata.user }}
                                p(matLine)
                                    span {{ data_bank_sede.metadata.desc_cargo}}
                        .cs-list(*ngFor="let data of data_bank_sede.__json_caja; let c = index", [class.active]="data.active", [class.hover]="data.accion == INGRESOS || data.accion == EGRESOS" ,(click)="showData(data.accion,i,c)" )
                            .cs-list-item__title {{ data.accion }}
                            .cs-list-item([ngSwitch]="data.accion")
                                span.cs-green(*ngSwitchCase="INGRESOS") {{ data.sumatoria }}
                                span.cs-red(*ngSwitchCase="EGRESOS") {{ data.sumatoria }}
                                span(*ngSwitchDefault) {{ data.sumatoria }}
                .col-5
                    .padding
                        cs-bank-chart([egresos]="data_bank_sede.__json_graphics['ingresos']", [ingresos]="data_bank_sede.__json_graphics['egresos']", [category]="data_bank_sede.__json_graphics['dia']", [height]="150")
            .col-12.padding-top

                mat-table(#table, [dataSource]="dataSource[i]")
                    ng-container(matColumnDef="description")
                            mat-header-cell(*matHeaderCellDef) Descripción
                            mat-cell(*matCellDef="let element") {{ element.description }}
                    ng-container(matColumnDef="amount")
                            mat-header-cell.w-80.text-center(*matHeaderCellDef) Monto
                            mat-cell.w-80.text-center(*matCellDef="let element") {{ element.amount }}
                    ng-container(matColumnDef="date")
                            mat-header-cell.text-center(*matHeaderCellDef) Fecha
                            mat-cell.text-center(*matCellDef="let element") {{ element.date }}
                    ng-container(matColumnDef="payment_method")
                            mat-header-cell.text-center(*matHeaderCellDef) Modo de pago
                            mat-cell.text-center(*matCellDef="let element") {{ element.payment_method }}
                    ng-container(matColumnDef="students")
                            mat-header-cell.text-center.w-90(*matHeaderCellDef) Estudiantes
                            mat-cell.text-center.w-90(*matCellDef="let element")
                                img([src]="UNKNOWN_USER_IMAGE", matTooltip="Solimarco")
                    ng-container(matColumnDef="record")
                            mat-header-cell.text-center.w-90(*matHeaderCellDef) Registro
                            mat-cell.text-center.w-90(*matCellDef="let element")
                                img([src]="UNKNOWN_USER_IMAGE", matTooltip="Carlos Galvez")
                    ng-container(matColumnDef="action")
                            mat-header-cell.text-right.w-40(*matHeaderCellDef) Acción
                            mat-cell.text-right.w-40(*matCellDef="let element")
                                button(mat-icon-button,[matMenuTriggerFor]='action')
                                    mat-icon more_vert
                                mat-menu(#action='matMenu', yPosition="below", xPosition="before")
                                    button(mat-menu-item, (click)="generarExcel()") Boleta.PDF

                    mat-header-row(*matHeaderRowDef="displayedColumns")
                    mat-row(*matRowDef="let row; columns: displayedColumns;")

                mat-paginator.cs-tsr-paginator(#paginator, [pageSize]="5", [pageSizeOptions]="[5, 10, 20]", [showFirstLastButtons]="true")